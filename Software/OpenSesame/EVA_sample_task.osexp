---
API: 2.1
OpenSesame: 3.3.3
Platform: nt
---
set width 1024
set uniform_coordinates yes
set title "Extended template"
set subject_parity even
set subject_nr 0
set start experiment
set sound_sample_size -16
set sound_freq 48000
set sound_channels 2
set sound_buf_size 1024
set round_decimals 2
set height 768
set fullscreen no
set form_clicks no
set foreground white
set font_underline no
set font_size 18
set font_italic no
set font_family mono
set font_bold no
set experiment_path "C:\\ExperimentData\\01 Lopende projecten\\EVA"
set disable_garbage_collection yes
set description "A template containing a practice and an experimental phase"
set coordinates uniform
set compensation 0
set canvas_backend psycho
set bidi yes
set background black

define notepad about_this_template
	__note__
	This template already contains the basic structure of a typical experiment.
	It consists of a practice phase, followed by an experimental phase. For more
	information, please visit <http://osdoc.cogsci.nl/>
	Have fun with OpenSesame!
	__end__
	set description "Some pointers to help you gest started!"

define loop block_loop
	set source_file ""
	set source table
	set skip 0
	set repeat 1
	set order sequential
	set offset no
	set item trial_sequence
	set description "A single block of trials"
	set cycles 4
	set continuous no
	set column_order ""
	set break_if_on_first yes
	set break_if never
	setcycle 0 marker 1
	setcycle 1 marker 2
	setcycle 2 marker 3
	setcycle 3 marker 4
	run trial_sequence

define sequence block_sequence
	set flush_keyboard yes
	set description "A sequence containing a single block of trials followed by feedback to the participant"
	run reset_feedback always
	run block_loop always
	run feedback always

define inline_script close_eva
	set description "Executes Python code"
	___run__
	eva.close_eva(my_eva)
	__end__
	set _prepare ""

define sketchpad end_of_experiment
	set start_response_interval no
	set duration keypress
	set description "A sketchpad notifying the participant that the experiment is finished"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=always text="Press any key to exit" x=0 y=0 z_index=0

define sketchpad end_of_practice
	set start_response_interval no
	set duration keypress
	set description "A sketchpad notifying the participant that the practice phase is finished"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=always text="Press any key to continue" x=0 y=0 z_index=0

define sequence experiment
	set flush_keyboard yes
	set description "The main sequence of the experiment"
	run init always
	run instructions always
	run practice_loop always
	run end_of_practice always
	run experimental_loop always
	run end_of_experiment always
	run close_eva always

define loop experimental_loop
	set source_file ""
	set source table
	set skip 0
	set repeat 1
	set order random
	set offset no
	set item block_sequence
	set description "A loop containing one or more experimental blocks"
	set cycles 1
	set continuous no
	set column_order practice
	set break_if_on_first yes
	set break_if never
	setcycle 0 practice no
	run block_sequence

define feedback feedback
	set reset_variables yes
	set duration keypress
	set description "Provides feedback to the participant"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=always text="Your average response time was [avg_rt]ms<br /><br />Your accuracy was [acc]%<br /><br />Press any key to continue" x=0 y=0 z_index=0

define inline_script init
	set description "Executes Python code"
	___run__
	# import modules:
	import os
	import time
	
	# Make sure the current task and the eva Python module are placed in the same folder. Set path to where the current task and python eva module are:
	os.chdir("C:/ExperimentData/01 Lopende projecten/EVA")
	cwd = os.getcwd()
	
	# Import eva module:
	import eva
	
	
	# init eva (com port needs to be adjusted and can be found in Device Manager, or use 'FAKECOM' when eva is not connected):
	my_eva = eva.init_eva('COM7')
	
	# when eva is type string, it contains an error:
	if type(my_eva) == str:
	    print('Error, EVA connection failed')
	
	# Reset marker:
	eva.write_marker(my_eva, 255)
	time.sleep(0.1)
	eva.write_marker(my_eva, 0)
	time.sleep(0.1)
	__end__
	set _prepare ""

define sketchpad instructions
	set start_response_interval no
	set duration keypress
	set description "A sketchpad containing the instructions for the participant"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=always text="Press any key to begin!" x=0 y=0 z_index=0

define keyboard_response keyboard_response
	set timeout infinite
	set flush yes
	set event_type keypress
	set duration keypress
	set description "Collects keyboard responses"

define logger logger
	set description "Logs experimental data"
	set auto_log yes

define loop practice_loop
	set source_file ""
	set source table
	set skip 0
	set repeat 1
	set order random
	set offset no
	set item block_sequence
	set description "A loop containing one or more practice blocks"
	set cycles 1
	set continuous no
	set column_order practice
	set break_if_on_first yes
	set break_if never
	setcycle 0 practice yes
	run block_sequence

define reset_feedback reset_feedback
	set description "Resets the feedback variables, such as 'avg_rt' and 'acc'"

define inline_script send_marker
	set description "Executes Python code"
	___run__
	# Send marker
	eva.write_marker(my_eva, var.marker)
	__end__
	set _prepare ""

define inline_script send_marker_stop
	set description "Executes Python code"
	___run__
	# Reset marker, and make sure marker is reset for a bit (10 ms)
	eva.write_marker(my_eva, 0)
	time.sleep(0.01)
	__end__
	set _prepare ""

define sketchpad sketchpad
	set start_response_interval no
	set duration 0
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=always text="Sending marker [marker]" x=0.0 y=-64.0 z_index=0
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=always text="Press any key for next marker" x=0.0 y=0.0 z_index=0

define sequence trial_sequence
	set flush_keyboard yes
	set description "A single trial"
	run send_marker always
	run sketchpad always
	run keyboard_response always
	run send_marker_stop always
	run logger always

